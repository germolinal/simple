name: Deploy

on:
  push:
    branches: [deploy]

env:
  CARGO_TERM_COLOR: always

jobs:
  test_and_docs:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout SIMPLE
        uses: actions/checkout@v4
        with:
          path: simple

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

  publish_binaries:
    needs: test_and_docs

    strategy:
      fail-fast: false
      matrix:
        target:
          [
            aarch64-apple-darwin,
            x86_64-unknown-linux-gnu,
            x86_64-pc-windows-msvc,
          ]
        include:
          - target: aarch64-apple-darwin
            runner: macos-latest
            compress_cmd: tar -czf simple_docs/dist/binaries/${{matrix.target}}.tgz simple/target/${{matrix.target}}/release
          - target: x86_64-unknown-linux-gnu
            runner: ubuntu-latest
            compress_cmd: tar -czf simple_docs/dist/binaries/${{matrix.target}}.tar.gz simple/target/${{matrix.target}}/release
          - target: x86_64-pc-windows-msvc
            runner: windows-latest
            compress_cmd: tar.exe -x -f simple_docs/dist/binaries/${{matrix.target}}.zip simple/target/${{matrix.target}}/release

    runs-on: ${{ matrix.runner }}

    permissions:
      contents: "read"
      pages: write
      id-token: "write"

    steps:
      - name: Checkout SIMPLE
        uses: actions/checkout@v4
        with:
          path: simple

      - name: Checkout SIMPLE Docs
        uses: actions/checkout@v4
        with:
          repository: germolinal/simple_docs
          token: ${{ secrets.SIMPLE_DOCS_WRITE_TOKEN }}
          path: simple_docs

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Compile for target ${{matrix.target}}
        run: |
          cargo build --manifest-path simple/Cargo.toml --release --features parallel --target ${{matrix.target}}

      - name: Remove intermediate files in ${{matrix.target}}
        run: |
          find simple/target/${{matrix.target}}/release -type f -name "*.d" -delete
          rm -rf simple/target/${{matrix.target}}/release/.fingerprint
          rm -rf simple/target/${{matrix.target}}/release/build
          rm -rf simple/target/${{matrix.target}}/release/deps
          rm -rf simple/target/${{matrix.target}}/release/examples
          rm -rf simple/target/${{matrix.target}}/release/incremental
          rm -rf simple/target/${{matrix.target}}/release/.cargo-lock
          rm -rf simple/target/${{matrix.target}}/release/*.rlib

      - name: Zip binaries for ${{matrix.target}}
        run: |
          zip -r simple_docs/dist/binaries/${{matrix.target}}.zip simple/target/${{matrix.target}}/release

      - name: Push binaries
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions"
          cd simple_docs
          git add dist/binaries
          git commit -m 'automatic update of target ${{matrix.target}}'
          git push
