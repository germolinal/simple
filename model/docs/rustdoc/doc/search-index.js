var searchIndex = JSON.parse('{\
"model":{"doc":"This crate contains the data structure utilized for â€¦","t":[13,13,13,4,3,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,6,13,13,2,13,13,4,13,13,13,13,3,13,13,3,13,13,4,13,4,3,6,4,3,3,13,2,3,13,13,13,13,13,13,13,13,13,13,13,13,13,2,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,12,12,12,12,12,12,12,12,12,12,12,0,12,0,12,12,12,12,0,12,12,12,12,12,12,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,0,12,12,12,12,12,12,12,12,0,12,0,12,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,2,2,0,0,12,0,0,12,0,0,12,12,0,12,12,12,0,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,12,11,3,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,5,5,5,5,13,13,13,3,4,4,13,13,11,11,12,11,12,11,11,12,11,11,12,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,12,11,11,12,11,11,12,11,11,12,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,12,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,13,4,3,13,11,11,11,11,12,11,0,11,11,12,12,12,12,0,11,12,12,12,11,12,12,11,11,11,12,12,12,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,3,11,11,11,11,11,12,11,11,11,11,11,12,11,11,12,11,11,11,12,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,3,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,5,3,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,12,11,12,12,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,3,13,4,13,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,3,11,11,11,12,11,11,12,11,11,11,11,12,11,11,11,11,12,11,12,11,11,12,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,12,11,2,13,2,13,4,11,11,11,11,11,11,11,0,11,11,0,11,11,11,11,11,11,11,12,12,13,13,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,12,11,11,12,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,12,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,12,11,11,11,11,11,11,11,12,11,11,13,13,13,13,13,13,13,13,3,4,11,11,12,11,12,11,11,12,11,11,12,11,11,12,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,12,11,12,11,11,12,11,11,12,11,11,12,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["AmbientTemperature","Binary","Blast","Boundary","Building","Ceiling","City","Clothing","Clothing","Constant","Construction","Continuous","Country","Custom","DesignFlowRate","Doe2","Door","EffectiveAirLeakageArea","ExteriorFloor","ExteriorWall","Fenestration","FenestrationBackConvectionCoefficient","FenestrationBackConvectionCoefficient","FenestrationBackConvectiveHeatFlow","FenestrationBackConvectiveHeatFlow","FenestrationBackIRIrradiance","FenestrationBackIRIrradiance","FenestrationBackSolarIrradiance","FenestrationBackSolarIrradiance","FenestrationFrontConvectionCoefficient","FenestrationFrontConvectionCoefficient","FenestrationFrontConvectiveHeatFlow","FenestrationFrontConvectiveHeatFlow","FenestrationFrontIRIrradiance","FenestrationFrontIRIrradiance","FenestrationFrontSolarIrradiance","FenestrationFrontSolarIrradiance","FenestrationNodeTemperature","FenestrationNodeTemperature","FenestrationOpenFraction","FenestrationOpenFraction","FenestrationPosition","FenestrationType","Fixed","Float","Ground","GroundFloor","HVAC","HeatingCoolingPowerConsumption","HeatingCoolingPowerConsumption","Infiltration","InteriorFloor","InteriorWall","IsolatedRural","LargeLotUrban","Luminaire","LuminairePowerConsumption","LuminairePowerConsumption","Material","NoObstructions","Ocean","Output","Roof","ShelterClass","Model","SimulationState","SimulationStateElement","SimulationStateHeader","SiteDetails","SmallLotUrban","SolarOptions","Space","Space","SpaceAirExchangeVolume","SpaceAirExchangeVolume","SpaceDryBulbTemperature","SpaceDryBulbTemperature","SpaceInfiltrationTemperature","SpaceInfiltrationTemperature","SpaceInfiltrationVolume","SpaceInfiltrationVolume","SpaceVentilationTemperature","SpaceVentilationTemperature","SpaceVentilationVolume","SpaceVentilationVolume","Substance","Suburbs","Surface","SurfaceBackConvectionCoefficient","SurfaceBackConvectionCoefficient","SurfaceBackConvectiveHeatFlow","SurfaceBackConvectiveHeatFlow","SurfaceBackIRIrradiance","SurfaceBackIRIrradiance","SurfaceBackSolarIrradiance","SurfaceBackSolarIrradiance","SurfaceFrontConvectionCoefficient","SurfaceFrontConvectionCoefficient","SurfaceFrontConvectiveHeatFlow","SurfaceFrontConvectiveHeatFlow","SurfaceFrontIRIrradiance","SurfaceFrontIRIrradiance","SurfaceFrontSolarIrradiance","SurfaceFrontSolarIrradiance","SurfaceNodeTemperature","SurfaceNodeTemperature","SurfaceType","TerrainClass","Urban","Urban","Window","altitude","back_boundary","back_boundary","back_convection_coefficient","back_convection_coefficient","back_convective_heat_flow","back_convective_heat_flow","back_incident_solar_irradiance","back_incident_solar_irradiance","back_ir_irradiance","back_ir_irradiance","boundary","brightness","building","building","buildings","category","category","construction","construction","construction","constructions","default_values","dry_bulb_temperature","elements","error_msgs","fenestration","fenestrations","first_node_temperature","first_node_temperature","front_boundary","front_boundary","front_convection_coefficient","front_convection_coefficient","front_convective_heat_flow","front_convective_heat_flow","front_incident_solar_irradiance","front_incident_solar_irradiance","front_ir_irradiance","front_ir_irradiance","hvac","hvacs","infiltration","infiltration","infiltration_temperature","infiltration_volume","last_node_temperature","last_node_temperature","latitude","longitude","loudness","luminaire","luminaires","material","materials","materials","max_power","model","n_individual","n_operational","n_storeys","name","name","name","name","name","name","name","name","open_fraction","operation","outputs","parent_surface","passed_operational","passed_personal","power_consumption","print_error","print_warning","rhai_api","scanner","shelter_class","simulation_options","simulation_state","simulation_state","simulation_state_element","site_details","site_details","solar_options","space","spaces","stack_coefficient","standard_meridian","substance","substance","substances","surface","surfaces","target_space","terrain","thickness","ventilation_temperature","ventilation_volume","vertices","vertices","volume","wind_coefficient","space","temperature","closed","fraction","max","min","open","a","area","b","c","d","flow","flow","flow","phi","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","name","AmbientTemperature","Boundary","Ground","Space","borrow","borrow_mut","clone","clone_into","deserialize","fmt","from","into","object_type","print_doc","serialize","to_owned","try_from","try_into","type_id","space","temperature","Building","IsolatedRural","LargeLotUrban","NoObstructions","ShelterClass","SmallLotUrban","Urban","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","fmt","fmt","from","from","into","into","n_storeys","n_storeys","n_storeys_or","name","name","new","object_type","object_type","print_doc","print_doc","serialize","serialize","set_n_storeys","set_shelter_class","set_stack_coefficient","set_wind_coefficient","shelter_class","shelter_class","stack_coefficient","stack_coefficient","stack_coefficient_or","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","wind_coefficient","wind_coefficient","wind_coefficient_or","Construction","borrow","borrow_mut","default","deserialize","fmt","from","into","materials","name","name","new","object_type","print_doc","serialize","try_from","try_into","type_id","print_error","print_error_no_module","print_warning","print_warning_no_module","Binary","Continuous","Door","Fenestration","FenestrationPosition","FenestrationType","Fixed","Window","area","back_boundary","back_boundary","back_convection_coefficient","back_convection_coefficient","back_convection_coefficient_index","back_convective_heat_flow","back_convective_heat_flow","back_convective_heat_flow_index","back_incident_solar_irradiance","back_incident_solar_irradiance","back_incident_solar_irradiance_index","back_ir_irradiance","back_ir_irradiance","back_ir_irradiance_index","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","category","category","clone","clone","clone","clone_into","clone_into","clone_into","clone_loop","construction","deserialize","deserialize","deserialize","eq","first_node_temperature","first_node_temperature","first_node_temperature_index","fmt","fmt","fmt","from","from","from","front_boundary","front_boundary","front_convection_coefficient","front_convection_coefficient","front_convection_coefficient_index","front_convective_heat_flow","front_convective_heat_flow","front_convective_heat_flow_index","front_incident_solar_irradiance","front_incident_solar_irradiance","front_incident_solar_irradiance_index","front_ir_irradiance","front_ir_irradiance","front_ir_irradiance_index","into","into","into","is_operable","last_node_temperature","last_node_temperature","last_node_temperature_index","name","name","new","object_type","object_type","object_type","open_fraction","open_fraction","open_fraction_index","operation","operation","parent_surface","parent_surface","print_api_doc","print_doc","print_doc","print_doc","register_api","serialize","serialize","serialize","set_back_boundary","set_back_convection_coefficient","set_back_convection_coefficient_index","set_back_convective_heat_flow","set_back_convective_heat_flow_index","set_back_incident_solar_irradiance","set_back_incident_solar_irradiance_index","set_back_ir_irradiance","set_back_ir_irradiance_index","set_category","set_first_node_temperature","set_first_node_temperature_index","set_front_boundary","set_front_convection_coefficient","set_front_convection_coefficient_index","set_front_convective_heat_flow","set_front_convective_heat_flow_index","set_front_incident_solar_irradiance","set_front_incident_solar_irradiance_index","set_front_ir_irradiance","set_front_ir_irradiance_index","set_last_node_temperature","set_last_node_temperature_index","set_open_fraction","set_open_fraction_index","set_operation","set_parent_surface","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vertices","closed","fraction","max","min","open","ElectricHeater","ElectricHeater","HVAC","IdealHeaterCooler","IdealHeaterCooler","borrow","borrow_mut","clone","clone_into","cooling_setpoint","deserialize","electric_heater","fmt","from","heating_cooling_consumption","heating_cooling_consumption","heating_setpoint","heating_setpoint","ideal_heater_cooler","into","max_cooling_power","max_heating_power","max_heating_power","name","name","name","print_doc","register_api","serialize","target_space","target_spaces","thermostat_location","to_owned","try_from","try_into","type_id","0","0","ElectricHeater","borrow","borrow_mut","clone","clone_into","deserialize","fmt","from","heating_cooling_consumption","heating_cooling_consumption","heating_cooling_consumption_index","heating_setpoint","heating_setpoint","heating_setpoint_or","into","max_heating_power","max_heating_power","max_heating_power_or","name","name","new","object_type","print_api_doc","print_doc","register_api","serialize","set_heating_cooling_consumption","set_heating_cooling_consumption_index","set_heating_setpoint","set_max_heating_power","set_target_space","target_space","target_space","to_owned","try_from","try_into","type_id","wrap","IdealHeaterCooler","borrow","borrow_mut","clone","clone_into","cooling_setpoint","cooling_setpoint","cooling_setpoint_or","deserialize","fmt","from","heating_cooling_consumption","heating_cooling_consumption","heating_cooling_consumption_index","heating_setpoint","heating_setpoint","heating_setpoint_or","into","max_cooling_power","max_cooling_power","max_cooling_power_or","max_heating_power","max_heating_power","max_heating_power_or","name","name","new","object_type","print_api_doc","print_doc","register_api","serialize","set_cooling_setpoint","set_heating_cooling_consumption","set_heating_cooling_consumption_index","set_heating_setpoint","set_max_cooling_power","set_max_heating_power","set_thermostat_location","target_spaces","thermostat_location","thermostat_location","to_owned","try_from","try_into","type_id","wrap","Blast","Constant","DesignFlowRate","Doe2","EffectiveAirLeakageArea","Infiltration","borrow","borrow_mut","clone","clone_into","deserialize","eq","fmt","from","into","ne","object_type","print_doc","serialize","to_owned","try_from","try_into","type_id","a","area","b","c","d","flow","flow","flow","phi","Luminaire","borrow","borrow_mut","clone","clone_into","deserialize","fmt","from","into","max_power","max_power","max_power_or","name","name","new","object_type","power_consumption","power_consumption","power_consumption_index","print_api_doc","print_doc","register_api","serialize","set_max_power","set_power_consumption","set_power_consumption_index","set_target_space","target_space","target_space","to_owned","try_from","try_into","type_id","Material","borrow","borrow_mut","deserialize","fmt","from","into","name","name","new","object_type","print_doc","serialize","substance","thickness","try_from","try_into","type_id","Model","SimpleModelVisitor","add_building","add_construction","add_fenestration","add_hvac","add_luminaire","add_material","add_space","add_substance","add_surface","borrow","borrow","borrow_mut","borrow_mut","buildings","clone","clone_into","constructions","default","deserialize","expecting","fenestrations","fmt","fmt","from","from","from_bytes","from_file","from_json","from_json_file","get_building","get_construction","get_fenestration","get_hvac","get_luminaire","get_material","get_material_substance","get_space","get_substance","get_surface","hvacs","into","into","luminaires","materials","name","outputs","push_to_state","serialize","simulation_state","site_details","solar_options","spaces","substances","surfaces","take_state","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","visit_map","register_control_api","SimpleScanner","advance","borrow","borrow_mut","current_index","finished","from","identifier","into","line","make_error_msg","new","object","parse_model","peek","peek_next","skip_white_space","source","start_index","try_from","try_into","type_id","update_start_index","SolarOptions","borrow","borrow_mut","clone","clone_into","default","deserialize","fmt","from","into","n_solar_irradiance_points","n_solar_irradiance_points","n_solar_irradiance_points_or","new","object_type","optical_data_path","optical_data_path","print_doc","serialize","set_n_solar_irradiance_points","set_optical_data_path","set_solar_ambient_divitions","set_solar_sky_discretization","solar_ambient_divitions","solar_ambient_divitions","solar_ambient_divitions_or","solar_sky_discretization","solar_sky_discretization","solar_sky_discretization_or","to_owned","try_from","try_into","type_id","SimulationState","SimulationStateHeader","borrow","borrow_mut","clone","clone_into","copy_from","copy_individual_state","copy_operational_state","copy_physical_state","default","default_values","elements","fmt","from","index","into","is_empty","len","n_individual","n_individual","n_operational","n_operational","new","passed_operational","passed_personal","push","take_values","to_owned","try_from","try_into","type_id","Clothing","Clothing","FenestrationBackConvectionCoefficient","FenestrationBackConvectionCoefficient","FenestrationBackConvectiveHeatFlow","FenestrationBackConvectiveHeatFlow","FenestrationBackIRIrradiance","FenestrationBackIRIrradiance","FenestrationBackSolarIrradiance","FenestrationBackSolarIrradiance","FenestrationFrontConvectionCoefficient","FenestrationFrontConvectionCoefficient","FenestrationFrontConvectiveHeatFlow","FenestrationFrontConvectiveHeatFlow","FenestrationFrontIRIrradiance","FenestrationFrontIRIrradiance","FenestrationFrontSolarIrradiance","FenestrationFrontSolarIrradiance","FenestrationNodeTemperature","FenestrationNodeTemperature","FenestrationOpenFraction","FenestrationOpenFraction","HeatingCoolingPowerConsumption","HeatingCoolingPowerConsumption","LuminairePowerConsumption","LuminairePowerConsumption","Output","SimulationStateElement","SpaceAirExchangeVolume","SpaceAirExchangeVolume","SpaceDryBulbTemperature","SpaceDryBulbTemperature","SpaceInfiltrationTemperature","SpaceInfiltrationTemperature","SpaceInfiltrationVolume","SpaceInfiltrationVolume","SpaceVentilationTemperature","SpaceVentilationTemperature","SpaceVentilationVolume","SpaceVentilationVolume","StateElementField","SurfaceBackConvectionCoefficient","SurfaceBackConvectionCoefficient","SurfaceBackConvectiveHeatFlow","SurfaceBackConvectiveHeatFlow","SurfaceBackIRIrradiance","SurfaceBackIRIrradiance","SurfaceBackSolarIrradiance","SurfaceBackSolarIrradiance","SurfaceFrontConvectionCoefficient","SurfaceFrontConvectionCoefficient","SurfaceFrontConvectiveHeatFlow","SurfaceFrontConvectiveHeatFlow","SurfaceFrontIRIrradiance","SurfaceFrontIRIrradiance","SurfaceFrontSolarIrradiance","SurfaceFrontSolarIrradiance","SurfaceNodeTemperature","SurfaceNodeTemperature","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","eq","eq","fmt","fmt","from","from","into","into","is_operational","is_personal","is_physical","ne","ne","object_type","print_doc","serialize","stringify","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","City","Country","Ocean","SiteDetails","Suburbs","TerrainClass","Urban","altitude","altitude","altitude_or","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deserialize","deserialize","eq","fmt","fmt","from","from","into","into","latitude","latitude","latitude_or","longitude","longitude","longitude_or","new","object_type","object_type","print_doc","print_doc","serialize","serialize","set_altitude","set_latitude","set_longitude","set_standard_meridian","set_terrain","standard_meridian","standard_meridian","standard_meridian_or","terrain","terrain","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Space","borrow","borrow_mut","brightness","brightness","brightness_index","building","building","clone","clone_into","deserialize","dry_bulb_temperature","dry_bulb_temperature","dry_bulb_temperature_index","fmt","from","infiltration","infiltration","infiltration_temperature","infiltration_temperature","infiltration_temperature_index","infiltration_volume","infiltration_volume","infiltration_volume_index","into","loudness","loudness","loudness_index","name","name","new","object_type","print_api_doc","print_doc","register_api","serialize","set_brightness","set_brightness_index","set_building","set_dry_bulb_temperature","set_dry_bulb_temperature_index","set_infiltration","set_infiltration_temperature","set_infiltration_temperature_index","set_infiltration_volume","set_infiltration_volume_index","set_loudness","set_loudness_index","set_ventilation_temperature","set_ventilation_temperature_index","set_ventilation_volume","set_ventilation_volume_index","set_volume","to_owned","try_from","try_into","type_id","ventilation_temperature","ventilation_temperature","ventilation_temperature_index","ventilation_volume","ventilation_volume","ventilation_volume_index","volume","volume","volume_or","Gas","Gas","Normal","Normal","Substance","borrow","borrow_mut","clone","clone_into","deserialize","fmt","from","gas","into","name","normal","print_doc","register_api","serialize","to_owned","try_from","try_into","type_id","0","0","Air","Argon","Gas","GasSpecification","Krypton","Xenon","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","fmt","fmt","from","from","gas","gas","into","into","name","name","new","object_type","object_type","print_doc","print_doc","serialize","serialize","set_gas","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","wrap","Normal","back_solar_absorbtance","back_solar_absorbtance","back_solar_absorbtance_or","back_thermal_absorbtance","back_thermal_absorbtance","back_thermal_absorbtance_or","back_visible_reflectance","back_visible_reflectance","back_visible_reflectance_or","borrow","borrow_mut","clone","clone_into","default","density","density","density_or","deserialize","fmt","from","front_solar_absorbtance","front_solar_absorbtance","front_solar_absorbtance_or","front_thermal_absorbtance","front_thermal_absorbtance","front_thermal_absorbtance_or","front_visible_reflectance","front_visible_reflectance","front_visible_reflectance_or","into","name","name","new","object_type","print_doc","serialize","set_back_solar_absorbtance","set_back_thermal_absorbtance","set_back_visible_reflectance","set_density","set_front_solar_absorbtance","set_front_thermal_absorbtance","set_front_visible_reflectance","set_solar_transmittance","set_specific_heat_capacity","set_thermal_conductivity","set_visible_transmissivity","solar_transmittance","solar_transmittance","solar_transmittance_or","specific_heat_capacity","specific_heat_capacity","specific_heat_capacity_or","thermal_conductivity","thermal_conductivity","thermal_conductivity_or","thermal_diffusivity","to_owned","try_from","try_into","type_id","visible_transmissivity","visible_transmissivity","visible_transmissivity_or","wrap","Ceiling","Custom","ExteriorFloor","ExteriorWall","GroundFloor","InteriorFloor","InteriorWall","Roof","Surface","SurfaceType","area","back_boundary","back_boundary","back_convection_coefficient","back_convection_coefficient","back_convection_coefficient_index","back_convective_heat_flow","back_convective_heat_flow","back_convective_heat_flow_index","back_incident_solar_irradiance","back_incident_solar_irradiance","back_incident_solar_irradiance_index","back_ir_irradiance","back_ir_irradiance","back_ir_irradiance_index","borrow","borrow","borrow_mut","borrow_mut","category","category","clone","clone","clone_into","clone_into","construction","deserialize","deserialize","eq","first_node_temperature","first_node_temperature","first_node_temperature_index","fmt","fmt","from","from","front_boundary","front_boundary","front_convection_coefficient","front_convection_coefficient","front_convection_coefficient_index","front_convective_heat_flow","front_convective_heat_flow","front_convective_heat_flow_index","front_incident_solar_irradiance","front_incident_solar_irradiance","front_incident_solar_irradiance_index","front_ir_irradiance","front_ir_irradiance","front_ir_irradiance_index","into","into","last_node_temperature","last_node_temperature","last_node_temperature_index","name","name","ne","new","object_type","object_type","print_api_doc","print_doc","print_doc","register_api","serialize","serialize","set_back_boundary","set_back_convection_coefficient","set_back_convection_coefficient_index","set_back_convective_heat_flow","set_back_convective_heat_flow_index","set_back_incident_solar_irradiance","set_back_incident_solar_irradiance_index","set_back_ir_irradiance","set_back_ir_irradiance_index","set_category","set_first_node_temperature","set_first_node_temperature_index","set_front_boundary","set_front_convection_coefficient","set_front_convection_coefficient_index","set_front_convective_heat_flow","set_front_convective_heat_flow_index","set_front_incident_solar_irradiance","set_front_incident_solar_irradiance_index","set_front_ir_irradiance","set_front_ir_irradiance_index","set_last_node_temperature","set_last_node_temperature_index","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vertices","name"],"q":["modelmodel::Boundary","","model::FenestrationPosition","","","","","model::Infiltration","","","","","","","","","model::Output","","","","","","","","","","","","","","","","","","","","","","","","","","","","model::SimulationStateElement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","model::SurfaceType","model::boundary","","","","","","","","","","","","","","","","","","","model::boundary::Boundary","","model::building","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","model::construction","","","","","","","","","","","","","","","","","","model::error_msgs","","","","model::fenestration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","model::fenestration::FenestrationPosition","","","","","model::hvac","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","model::hvac::HVAC","","model::hvac::electric_heater","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","model::hvac::ideal_heater_cooler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","model::infiltration","","","","","","","","","","","","","","","","","","","","","","","model::infiltration::Infiltration","","","","","","","","","model::luminaire","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","model::material","","","","","","","","","","","","","","","","","","model::model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","model::rhai_api","model::scanner","","","","","","","","","","","","","","","","","","","","","","","model::simulation_options","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","model::simulation_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","model::simulation_state_element","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","model::simulation_state_element::Output","","","","","","","","","","","","","","","","","","","","","","","","","","","","model::simulation_state_element::SimulationStateElement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","model::site_details","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","model::space","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","model::substance","","","","","","","","","","","","","","","","","","","","","","","model::substance::Substance","","model::substance::gas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","model::substance::normal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","model::surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","model::surface::SurfaceType"],"d":["The surface leads to an environment with no wind or sun, â€¦","It can only be opened or closed, no in-between","It is the same as the <code>DesignFlowRate</code> infiltration object, â€¦","Represents the boundary of a <code>Surface</code>","This object is utilized to group <code>Space</code> objects together for","A floor/ceiling that connect two spaces, but whose area is â€¦","Describes Towns, City Outskirts, and centers of large â€¦","The amount of clothing the person is using, in Clo value","The amount of clothing the person is using, in Clo value","A contant infiltration, specified in <code>m3/s</code>","An object representing an array of Materials, ordered from â€¦","It can be position at any position, from fully opened to â€¦","Describes a Flat, Open Country","Other categories that might be useful (again, these labels â€¦","Sets the infiltration to the <code>DesignFlowRate</code> values using an","It is the same as the <code>DesignFlowRate</code> infiltration object, â€¦","This is a Door","Sets the infiltration based on <code>EffectiveLeakageArea</code> as â€¦","A floor that leads to the exterior (e.g., a floor â€¦","A Wall that connects a space with the exterior.","A surface that can potentially be opened and closed. It â€¦","The convective heat transfer coefficient at the back of a â€¦","The convective heat transfer coefficient at the back of a â€¦","The convective heat flow at the back of a surface","The convective heat flow at the back of a surface","Incident Infrared irradiance at the back","Incident Infrared irradiance at the back","Incident solar irradiance at the back","Incident solar irradiance at the back","The convective heat transfer coefficient at the front of a â€¦","The convective heat transfer coefficient at the front of a â€¦","The convective heat flow at the front of a surface","The convective heat flow at the front of a surface","Incident Infrared irradiance at the front","Incident Infrared irradiance at the front","Incident solar irradiance at the front","Incident solar irradiance at the front","Temperature (Float) of Fenestrationâ€™s (usize) node â€¦","Temperature (Float) of Fenestration&#39;s (usize) node (usize) â€¦","Represents how open is a fenestration. Contains the Index â€¦","Represents how open is a fenestration. Contains the Index â€¦","Defines whether the Fenestration is fixed or openable.","Defines whether the fenestration is a Door or a Window.","It is fixed at a certain open fraction","","The Surface is in contact with the Ground","A useful horizontal surface that touches the ground","","Represents the heating/cooling energy consumption of a â€¦","Represents the heating/cooling energy consumption of a â€¦","Infiltration is the unintended air exchange between an â€¦","Floor/ceiling that connects two spaces, and whose area is â€¦","A Wall connecting two spaces","Typical shelter for an isolated rural house","Typical shelter for urban buildings on larger lots","A Luminaire","Represents the power being consumed by a Luminaire object, â€¦","Represents the power being consumed by a Luminaire object, â€¦","The representation of a physical layer-Material. That is â€¦","No obstructions or local shielding","Describes sites next to the Ocean or Bayou Flat","Possible outputs to request from the simulation","A surfaces at the top of a building","Indicates how sheltered is the building. This affects its â€¦","A structure describing a set of built-environment objects.","The structure containing the data that changes during the â€¦","The idea is to have a cheap-to-clone (or copy?) structure","The SimulationState is a Vector of SimulationStateElement â€¦","Some information about the site in which the building(s) â€¦","Typical shelter produced by buildings that are immediately â€¦","","Represents a space with homogeneous temperature within a â€¦","The Surface leads to another space whose temperature and â€¦","The volume of air that is moving from one space to another â€¦","The volume of air that is moving from one space to another â€¦","Space Air Temperature in Câ€¦ The elements are the index â€¦","Space Air Temperature in Câ€¦ The elements are the index â€¦","The temperature of air that is entering the space in an â€¦","The temperature of air that is entering the space in an â€¦","The volume of air that is entering the space in an â€¦","The volume of air that is entering the space in an â€¦","The temperature of air that is entering the space in a â€¦","The temperature of air that is entering the space in a â€¦","The volume of air that is entering the space in a â€¦","The volume of air that is entering the space in a â€¦","","Describes a Rough, Wooded Country or Suburb","A fixed (i.e., not movable) surface in the building (or â€¦","The convective heat transfer coefficient at the back of a â€¦","The convective heat transfer coefficient at the back of a â€¦","The convective heat flow at the back of a surface","The convective heat flow at the back of a surface","Incident Infrared irradiance at the back","Incident Infrared irradiance at the back","Incident solar irradiance at the back","Incident solar irradiance at the back","The convective heat transfer coefficient at the front of a â€¦","The convective heat transfer coefficient at the front of a â€¦","The convective heat flow at the front of a surface","The convective heat flow at the front of a surface","Incident Infrared irradiance at the front","Incident Infrared irradiance at the front","Incident solar irradiance at the front","Incident solar irradiance at the front","Temperature (Float) of Surfaceâ€™s (usize) node (usize) â€¦","Temperature (Float) of Surface&#39;s (usize) node (usize) I.e. â€¦","The kind of surface, useful for pre- and post-processing.","This class modifies the wind speed in the site","Typical shelter caused by other buildings across the street","Describes Urban, Industrual or Forest terrain","This is a Window","The altitude of the site.","The back Boundary. No boundary means it leads to the â€¦","The Boundary in back of the Surface","","","","","","","","","Represents the boundary of a <code>Surface</code> (e.g. it can lead to â€¦","","A Building Object that can conain spaces.","The building in which this <code>Space</code> is inserted","The <code>Building</code>s in the model","Defines whether a <code>Fenestration</code> is a Window, Door, or other.","The Surface Type. ","A construction; i.e., a set of materials ordered from â€¦","The name of the Construction object in the constructions â€¦","The name of the construction in the Modelâ€™s â€¦","The <code>Construction</code>s in the model","The default values, from which the simulation will start","","The elements in the SimulationState","For printing warning and error messages to the user","A surface that can potentially be opened and closed.","The windows and doors in the surface    ","","","The front Boundary. No boundary means it leads to the â€¦","The Boundary in front of the Surface","","","","","","","","","A collection of elements heating and cooling systems","The Heating/Cooling devices in the space","An infiltration rate for a <code>Space</code>","The infiltration in the space","","","","","In degrees. South is negative and North is positive","In degrees. West is negative, east is positive.","","A Luminaire","Luminaires","A material; i.e., a Substance with a certain thickness","The <code>Material</code>s in the model","The indices of the Material objects in the materials â€¦","The maximum power consumption","The model itself","The number of individual StateElements in the State","The number of operational StateElements in the State","The number of storeys of this building.","The name of the model.","The name of the Building","The name of the Construction object. Must be unique within â€¦","The name of the material object","The name of the sub surface","The name of the surface","The name of the Luminaire","The name of the space","Index of the SimulationStateElement representing the â€¦","The opportunity for operating the Fenestration. If none is â€¦","The requested outputs","The name of the surface containing this <code>Fenestration</code>, if â€¦","A flag indicating whether any physical element has been â€¦","A flag indicating whether a non-individual element has â€¦","The state of the luminaire    ","","","The module in charge of registering the control API.","The module containing the functions that allow parsing a â€¦","The <code>ShelterClass</code> of this building.","For setting options in simulations","Contains the structure that has all the data that changes â€¦","Serde","Contains all the possible elements that can be registered â€¦","Some details of the site in which the building(s) is â€¦","Some information about the site in which the building(s) â€¦","The options for the Solar calculations","Represents a space within a building. This will often be a â€¦","The <code>Space</code>s in the model","The stack coefficient of this building, used for â€¦","In degrees. This is 15*GMT Time Zone","A physical substance with physicalâ€”i.e., optical, â€¦","The name of the <code>Substance</code> of which this <code>Material</code> is made â€¦","The <code>Substance</code>s in the model","A fixed (i.e., not movable) surface in the building (or â€¦","The <code>Surface</code>s in the model","The name of the space in which the space is located","The kind of terrain","The thickness of the <code>Material</code>","","","An array of Numbers representing the vertices of the â€¦","An array of Numbers representing the vertices of the â€¦","Volume of the space","The wind coefficient of this building, used for â€¦","The space to which this boundary leads to","The temperature in the evironment","The open-fraction when this <code>Fenestration</code> is closed","The fraction at which this <code>Fenestration</code> is open (or closed)","The maximum fraction this <code>Fenestration</code> can be opened.","The maximum fraction this <code>Fenestration</code> can be opened.","The open-fraction when this <code>Fenestration</code> is open","Factor A in equation above","The Effective Air Leakage Area (in m2 â€¦ ? check)","Factor B in equation above","Factor C in equation above","Factor D in equation above","Flow","Flow","Flow","Factor Phi_design in equation above","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The name of the custom type","The surface leads to an environment with no wind or sun, â€¦","Represents the boundary of a <code>Surface</code>","The Surface is in contact with the Ground","The Surface leads to another space whose temperature and â€¦","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Prints the docs for this object","","","","","","The space to which this boundary leads to","The temperature in the evironment","This object is utilized to group <code>Space</code> objects together for","Typical shelter for an isolated rural house","Typical shelter for urban buildings on larger lots","No obstructions or local shielding","Indicates how sheltered is the building. This affects its â€¦","Typical shelter produced by buildings that are immediately â€¦","Typical shelter caused by other buildings across the street","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Gets the <code>n_storeys</code> field. Returns a <code>Result</code> because this â€¦","The number of storeys of this building.","Gets the content of <code>n_storeys</code> field or a default value â€¦","Borrows the name","The name of the Building","Creates a new <code>Building</code>","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Prints the docs for this object","Prints the docs for this object","","","Sets the <code>n_storeys</code> field.","Sets the <code>shelter_class</code> field.","Sets the <code>stack_coefficient</code> field.","Sets the <code>wind_coefficient</code> field.","Gets the <code>shelter_class</code> field. Returns a <code>Result</code> because â€¦","The <code>ShelterClass</code> of this building.","Gets the <code>stack_coefficient</code> field. Returns a <code>Result</code> because â€¦","The stack coefficient of this building, used for â€¦","Gets the content of <code>stack_coefficient</code> field or a default â€¦","","","","","","","","","Gets the <code>wind_coefficient</code> field. Returns a <code>Result</code> because â€¦","The wind coefficient of this building, used for â€¦","Gets the content of <code>wind_coefficient</code> field or a default â€¦","An object representing an array of Materials, ordered from â€¦","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The indices of the Material objects in the materials â€¦","Borrows the name","The name of the Construction object. Must be unique within â€¦","Creates a new <code>Construction</code>","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Prints the docs for this object","","","","","Prints an error message.","Prints an error message","Prints a warning message.","Prints a warning message","It can only be opened or closed, no in-between","It can be position at any position, from fully opened to â€¦","This is a Door","A surface that can potentially be opened and closed. It â€¦","Defines whether the Fenestration is fixed or openable.","Defines whether the fenestration is a Door or a Window.","It is fixed at a certain open fraction","This is a Window","Gets the area, based on the <code>Polygon3D</code> that represents this â€¦","Gets the <code>back_boundary</code> field. Returns a <code>Result</code> because â€¦","The back Boundary. No boundary means it leads to the â€¦","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","","","","","","","Gets the <code>category</code> field. Returns a <code>Result</code> because this â€¦","Defines whether a <code>Fenestration</code> is a Window, Door, or other.","","","","","","","Clones the outer <code>Loop3D</code> of the <code>Fenestration</code>","The name of the Construction object in the constructions â€¦","","","","","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets the <code>front_boundary</code> field. Returns a <code>Result</code> because â€¦","The front Boundary. No boundary means it leads to the â€¦","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Can the fenestration be operated?","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Borrows the name","The name of the sub surface","Creates a new <code>Fenestration</code>","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Gets the value of the [<code>SimulationStateElement</code>] â€¦","Index of the SimulationStateElement representing the â€¦","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Gets the <code>operation</code> field. Returns a <code>Result</code> because this â€¦","The opportunity for operating the Fenestration. If none is â€¦","Gets the <code>parent_surface</code> field. Returns a <code>Result</code> because â€¦","The name of the surface containing this <code>Fenestration</code>, if â€¦","Prints the Rhai API for the <code>Fenestration</code>","Prints the docs for this object","Prints the docs for this object","Prints the docs for this object","Registers the Rhai API for the <code>Fenestration</code>","","","","Sets the <code>back_boundary</code> field.","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Sets the <code>category</code> field.","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Sets the <code>front_boundary</code> field.","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Sets the <code>operation</code> field.","Sets the <code>parent_surface</code> field.","","","","","","","","","","","","","An array of Numbers representing the vertices of the â€¦","The open-fraction when this <code>Fenestration</code> is closed","The fraction at which this <code>Fenestration</code> is open (or closed)","The maximum fraction this <code>Fenestration</code> can be opened.","The maximum fraction this <code>Fenestration</code> can be opened.","The open-fraction when this <code>Fenestration</code> is open","A simple model of an Electric Heater. It can only heat and â€¦","An electric heater, it can only heat.","A collection of elements heating and cooling systems","An ideal Heating and Cooling device, with a COP of 1.","An ideal heating/cooling device. Heats and Cools with an â€¦","","","","","The temperature that triggers the on/off option.","","","","Returns the argument unchanged.","The heating or cooling power consumption (not delivered to â€¦","The heating or cooling power consumption (not delivered to â€¦","The temperature that triggers the on/off option.","The temperature that automatically triggers the on/off â€¦","","Calls <code>U::from(self)</code>.","Max cooling power","Max heating power","Max heating power","Borrows the name","The name of the system","The name of the system","Prints the docs for this object","Registers the Rhai API for <code>HVAC</code>","","The <code>Space</code> that this <code>ElectricHeater</code> heats and/or cools","The <code>Space</code>s that this <code>IdealHeaterCooler</code> heats and/or cools","The name of the <code>Space</code> whose temperature triggers on/off","","","","","","","A simple model of an Electric Heater. It can only heat and â€¦","","","","","","","Returns the argument unchanged.","Gets the value of the [<code>SimulationStateElement</code>] â€¦","The heating or cooling power consumption (not delivered to â€¦","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Gets the <code>heating_setpoint</code> field. Returns a <code>Result</code> because â€¦","The temperature that triggers the on/off option.","Gets the content of <code>heating_setpoint</code> field or a default â€¦","Calls <code>U::from(self)</code>.","Gets the <code>max_heating_power</code> field. Returns a <code>Result</code> because â€¦","Max heating power","Gets the content of <code>max_heating_power</code> field or a default â€¦","Borrows the name","The name of the system","Creates a new <code>ElectricHeater</code>","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Prints the Rhai API for the <code>ElectricHeater</code>","Prints the docs for this object","Registers the Rhai API for the <code>ElectricHeater</code>","","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Sets the <code>heating_setpoint</code> field.","Sets the <code>max_heating_power</code> field.","Sets the <code>target_space</code> field.","Gets the <code>target_space</code> field. Returns a <code>Result</code> because this â€¦","The <code>Space</code> that this <code>ElectricHeater</code> heats and/or cools","","","","","Wraps the <code>ElectricHeater</code> in an <code>HVAC</code> enum","An ideal Heating and Cooling device, with a COP of 1.","","","","","Gets the <code>cooling_setpoint</code> field. Returns a <code>Result</code> because â€¦","The temperature that triggers the on/off option.","Gets the content of <code>cooling_setpoint</code> field or a default â€¦","","","Returns the argument unchanged.","Gets the value of the [<code>SimulationStateElement</code>] â€¦","The heating or cooling power consumption (not delivered to â€¦","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Gets the <code>heating_setpoint</code> field. Returns a <code>Result</code> because â€¦","The temperature that automatically triggers the on/off â€¦","Gets the content of <code>heating_setpoint</code> field or a default â€¦","Calls <code>U::from(self)</code>.","Gets the <code>max_cooling_power</code> field. Returns a <code>Result</code> because â€¦","Max cooling power","Gets the content of <code>max_cooling_power</code> field or a default â€¦","Gets the <code>max_heating_power</code> field. Returns a <code>Result</code> because â€¦","Max heating power","Gets the content of <code>max_heating_power</code> field or a default â€¦","Borrows the name","The name of the system","Creates a new <code>IdealHeaterCooler</code>","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Prints the Rhai API for the <code>IdealHeaterCooler</code>","Prints the docs for this object","Registers the Rhai API for the <code>IdealHeaterCooler</code>","","Sets the <code>cooling_setpoint</code> field.","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Sets the <code>heating_setpoint</code> field.","Sets the <code>max_cooling_power</code> field.","Sets the <code>max_heating_power</code> field.","Sets the <code>thermostat_location</code> field.","The <code>Space</code>s that this <code>IdealHeaterCooler</code> heats and/or cools","Gets the <code>thermostat_location</code> field. Returns a <code>Result</code> â€¦","The name of the <code>Space</code> whose temperature triggers on/off","","","","","Wraps the <code>IdealHeaterCooler</code> in an <code>HVAC</code> enum","It is the same as the <code>DesignFlowRate</code> infiltration object, â€¦","A contant infiltration, specified in <code>m3/s</code>","Sets the infiltration to the <code>DesignFlowRate</code> values using an","It is the same as the <code>DesignFlowRate</code> infiltration object, â€¦","Sets the infiltration based on <code>EffectiveLeakageArea</code> as â€¦","Infiltration is the unintended air exchange between an â€¦","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Prints the docs for this object","","","","","","Factor A in equation above","The Effective Air Leakage Area (in m2 â€¦ ? check)","Factor B in equation above","Factor C in equation above","Factor D in equation above","Flow","Flow","Flow","Factor Phi_design in equation above","A Luminaire","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Gets the <code>max_power</code> field. Returns a <code>Result</code> because this â€¦","The maximum power consumption","Gets the content of <code>max_power</code> field or a default value â€¦","Borrows the name","The name of the Luminaire","Creates a new <code>Luminaire</code>","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Gets the value of the [<code>SimulationStateElement</code>] â€¦","The state of the luminaire    ","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Prints the Rhai API for the <code>Luminaire</code>","Prints the docs for this object","Registers the Rhai API for the <code>Luminaire</code>","","Sets the <code>max_power</code> field.","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Sets the <code>target_space</code> field.","Gets the <code>target_space</code> field. Returns a <code>Result</code> because this â€¦","The name of the space in which the space is located","","","","","The representation of a physical layer-Material. That is â€¦","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Borrows the name","The name of the material object","Creates a new <code>Material</code>","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Prints the docs for this object","","The name of the <code>Substance</code> of which this <code>Material</code> is made â€¦","The thickness of the <code>Material</code>","","","","A structure describing a set of built-environment objects.","","Adds a <code>Building</code> to the <code>Model</code>","Adds a <code>Construction</code> to the <code>Model</code>","Adds a <code>Fenestration</code> to the <code>Model</code>","Adds a <code>HVAC</code> to the <code>Model</code>","Adds a <code>Luminaire</code> to the <code>Model</code>","Adds a reference (<code>Rc</code>) to a <code>Material</code> to the <code>Model</code>","Adds a <code>Space</code> to the <code>Model</code>","Adds a <code>Substance</code> to the <code>Model</code>","Adds a <code>Surface</code> to the <code>Model</code>","","","","","The <code>Building</code>s in the model","","","The <code>Construction</code>s in the model","","","","The windows and doors in the surface    ","","","Returns the argument unchanged.","Returns the argument unchanged.","Parses a <code>Model</code> from an array of bytes (i.e., a â€¦","Parses a <code>Model</code> from a text file","Parses a model from JSON","Parses a <code>Model</code> from a text file containing a JSON","Retrieves a reference (<code>Rc</code>) to a <code>Building</code> based on its â€¦","Retrieves a reference (<code>Rc</code>) to a <code>Construction</code> based on its â€¦","Retrieves a reference (<code>Rc</code>) to a <code>Fenestration</code> based on its â€¦","Retrieves a reference (<code>Rc</code>) to a <code>HVAC</code> based on its name, â€¦","Retrieves a reference (<code>Rc</code>) to a <code>Luminaire</code> based on its â€¦","Retrieves a reference (<code>Rc</code>) to a <code>Material</code> based on its â€¦","Retrieves a reference (<code>Rc</code>) to the <code>Substance</code> that comprises â€¦","Retrieves a reference (<code>Rc</code>) to a <code>Space</code> based on its name, â€¦","Retrieves a reference (<code>Rc</code>) to a <code>Substance</code> based on its â€¦","Retrieves a reference (<code>Rc</code>) to a <code>Surface</code> based on its name, â€¦","The Heating/Cooling devices in the space","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Luminaires","The <code>Material</code>s in the model","The name of the model.","The requested outputs","Adds an element and default value to the modelâ€™s â€¦","","Serde","Some information about the site in which the building(s) â€¦","The options for the Solar calculations","The <code>Space</code>s in the model","The <code>Substance</code>s in the model","The <code>Surface</code>s in the model","Takes the <code>SimulationStateHeader</code> from the model.","","","","","","","","","Registers the functions used to operate the building","The scanner","Advances one <code>char</code> in the <code>source</code>, returning the consumed â€¦","","","","","Returns the argument unchanged.","Consumes a whole Identifier","Calls <code>U::from(self)</code>.","The line being read (initialized as 0 by default)","Creates an syntax error and sets the <code>any_errors</code> flag in â€¦","Creates a new <code>SimpleScanner</code>","Consumes an object and returns the start and end of that â€¦","Parses a whole <code>Model</code> from a text file","Gets the <code>char</code> at the <code>current_index</code>. Returns <code>\\\\0</code> if finished.","Gets the <code>char</code> following the <code>current_index</code>. Returns <code>\\\\0</code> if â€¦","Skips the white spaces and the comments and all those â€¦","","","","","","Updates the start index; i.e., sets the <code>start_index</code> to the â€¦","The options for the solar and lighting calculations","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Gets the <code>n_solar_irradiance_points</code> field. Returns a <code>Result</code> â€¦","Number of points utilized to calculate the average â€¦","Gets the content of <code>n_solar_irradiance_points</code> field or a â€¦","Creates a new <code>SolarOptions</code>","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Gets the <code>optical_data_path</code> field. Returns a <code>Result</code> because â€¦","A path to the file containing information about solar â€¦","Prints the docs for this object","","Sets the <code>n_solar_irradiance_points</code> field.","Sets the <code>optical_data_path</code> field.","Sets the <code>solar_ambient_divitions</code> field.","Sets the <code>solar_sky_discretization</code> field.","Gets the <code>solar_ambient_divitions</code> field. Returns a <code>Result</code> â€¦","Number of primary rays sent from each of the â€¦","Gets the content of <code>solar_ambient_divitions</code> field or a â€¦","Gets the <code>solar_sky_discretization</code> field. Returns a <code>Result</code> â€¦","The sky discretization scheme used for solar irradiance. A â€¦","Gets the content of <code>solar_sky_discretization</code> field or a â€¦","","","","","The structure containing the data that changes during the â€¦","The SimulationState is a Vector of SimulationStateElement â€¦","","","","","Copies the whole state into another state","Copies the Individual SimulationStateElements objects from â€¦","Copies the Operational SimulationStateElements objects â€¦","Copies the Physical SimulationStateElements objects from â€¦","","The default values, from which the simulation will start","The elements in the SimulationState","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Checks if the State element is empty","Returns the number of elements in the State element","Returns the number of operational elements","The number of individual StateElements in the State","Returns the number of operational elements","The number of operational StateElements in the State","Creates a new empty Building State","A flag indicating whether any physical element has been â€¦","A flag indicating whether a non-individual element has â€¦","Pushes an SimulationStateElement into the elements vector.","Takes the <code>default_values</code> from the <code>SimulationStateHeader</code>. â€¦","","","","","The amount of clothing the person is using, in Clo value","The amount of clothing the person is using, in Clo value","The convective heat transfer coefficient at the back of a â€¦","The convective heat transfer coefficient at the back of a â€¦","The convective heat flow at the back of a surface","The convective heat flow at the back of a surface","Incident Infrared irradiance at the back","Incident Infrared irradiance at the back","Incident solar irradiance at the back","Incident solar irradiance at the back","The convective heat transfer coefficient at the front of a â€¦","The convective heat transfer coefficient at the front of a â€¦","The convective heat flow at the front of a surface","The convective heat flow at the front of a surface","Incident Infrared irradiance at the front","Incident Infrared irradiance at the front","Incident solar irradiance at the front","Incident solar irradiance at the front","Temperature (Float) of Fenestrationâ€™s (usize) node â€¦","Temperature (Float) of Fenestration&#39;s (usize) node (usize) â€¦","Represents how open is a fenestration. Contains the Index â€¦","Represents how open is a fenestration. Contains the Index â€¦","Represents the heating/cooling energy consumption of a â€¦","Represents the heating/cooling energy consumption of a â€¦","Represents the power being consumed by a Luminaire object, â€¦","Represents the power being consumed by a Luminaire object, â€¦","Possible outputs to request from the simulation","The idea is to have a cheap-to-clone (or copy?) structure","The volume of air that is moving from one space to another â€¦","The volume of air that is moving from one space to another â€¦","Space Air Temperature in Câ€¦ The elements are the index â€¦","Space Air Temperature in Câ€¦ The elements are the index â€¦","The temperature of air that is entering the space in an â€¦","The temperature of air that is entering the space in an â€¦","The volume of air that is entering the space in an â€¦","The volume of air that is entering the space in an â€¦","The temperature of air that is entering the space in a â€¦","The temperature of air that is entering the space in a â€¦","The volume of air that is entering the space in a â€¦","The volume of air that is entering the space in a â€¦","","The convective heat transfer coefficient at the back of a â€¦","The convective heat transfer coefficient at the back of a â€¦","The convective heat flow at the back of a surface","The convective heat flow at the back of a surface","Incident Infrared irradiance at the back","Incident Infrared irradiance at the back","Incident solar irradiance at the back","Incident solar irradiance at the back","The convective heat transfer coefficient at the front of a â€¦","The convective heat transfer coefficient at the front of a â€¦","The convective heat flow at the front of a surface","The convective heat flow at the front of a surface","Incident Infrared irradiance at the front","Incident Infrared irradiance at the front","Incident solar irradiance at the front","Incident solar irradiance at the front","Temperature (Float) of Surfaceâ€™s (usize) node (usize) â€¦","Temperature (Float) of Surface&#39;s (usize) node (usize) I.e. â€¦","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks whether a <code>SimulationStateElement</code> is of kind â€¦","Checks whether a <code>SimulationStateElement</code> is of kind <code>Personal</code>","Checks whether a <code>SimulationStateElement</code> is of kind <code>Physical</code>","","","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Prints the docs for this object","","Produces the String that would be needed to ask <code>SIMPLE</code> to â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes Towns, City Outskirts, and centers of large â€¦","Describes a Flat, Open Country","Describes sites next to the Ocean or Bayou Flat","Some information about the site in which the building(s) â€¦","Describes a Rough, Wooded Country or Suburb","This class modifies the wind speed in the site","Describes Urban, Industrual or Forest terrain","Gets the <code>altitude</code> field. Returns a <code>Result</code> because this â€¦","The altitude of the site.","Gets the content of <code>altitude</code> field or a default value â€¦","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Gets the <code>latitude</code> field. Returns a <code>Result</code> because this â€¦","In degrees. South is negative and North is positive","Gets the content of <code>latitude</code> field or a default value â€¦","Gets the <code>longitude</code> field. Returns a <code>Result</code> because this â€¦","In degrees. West is negative, east is positive.","Gets the content of <code>longitude</code> field or a default value â€¦","Creates a new <code>SiteDetails</code>","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Prints the docs for this object","Prints the docs for this object","","","Sets the <code>altitude</code> field.","Sets the <code>latitude</code> field.","Sets the <code>longitude</code> field.","Sets the <code>standard_meridian</code> field.","Sets the <code>terrain</code> field.","Gets the <code>standard_meridian</code> field. Returns a <code>Result</code> because â€¦","In degrees. This is 15*GMT Time Zone","Gets the content of <code>standard_meridian</code> field or a default â€¦","Gets the <code>terrain</code> field. Returns a <code>Result</code> because this â€¦","The kind of terrain","","","","","","","","","Represents a space with homogeneous temperature within a â€¦","","","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Gets the <code>building</code> field. Returns a <code>Result</code> because this â€¦","The building in which this <code>Space</code> is inserted","","","","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","","Returns the argument unchanged.","Gets the <code>infiltration</code> field. Returns a <code>Result</code> because this â€¦","The infiltration in the space","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Calls <code>U::from(self)</code>.","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Borrows the name","The name of the space","Creates a new <code>Space</code>","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Prints the Rhai API for the <code>Space</code>","Prints the docs for this object","Registers the Rhai API for the <code>Space</code>","","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Sets the <code>building</code> field.","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Sets the <code>infiltration</code> field.","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Sets the <code>volume</code> field.","","","","","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Gets the <code>volume</code> field. Returns a <code>Result</code> because this field â€¦","Volume of the space","Gets the content of <code>volume</code> field or a default value given â€¦","","A gas, as understood by the standard ISO-15099(2003).","","A normal (i.e., solid, homogeneous) substance such as â€¦","A physical substance with physicalâ€”i.e., optical, â€¦","","","","","","","Returns the argument unchanged.","Contains the gases","Calls <code>U::from(self)</code>.","Borrows the name","Module describing solid materials, transparent or not","Prints the docs for this object","Registers the Rhai API for <code>Substance</code>","","","","","","","","Air","Argon","Represents a Gas, as understood by the standard â€¦","Represent a common gas, with known physical properties","Krypton","Xenon","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Gets the <code>gas</code> field. Returns a <code>Result</code> because this field is â€¦","A predefined gas","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Borrows the name","The name of the Substance. Should be unique for each â€¦","Creates a new <code>Gas</code>","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Prints the docs for this object","Prints the docs for this object","","","Sets the <code>gas</code> field.","","","","","","","","","Wraps the <code>Gas</code> in a <code>Substance</code> enum","Represents a physical material with common physical â€¦","Gets the <code>back_solar_absorbtance</code> field. Returns a <code>Result</code> â€¦","Solar absorbtance (from 0 to 1) at the front side (Back â€¦","Gets the content of <code>back_solar_absorbtance</code> field or a â€¦","Gets the <code>back_thermal_absorbtance</code> field. Returns a <code>Result</code> â€¦","Back thermal absorbtance (i.e., emissitivy; from 0 to 1) â€¦","Gets the content of <code>back_thermal_absorbtance</code> field or a â€¦","Gets the <code>back_visible_reflectance</code> field. Returns a <code>Result</code> â€¦","Solar absorbtance (from 0 to 1) at the front side (Back â€¦","Gets the content of <code>back_visible_reflectance</code> field or a â€¦","","","","","","Gets the <code>density</code> field. Returns a <code>Result</code> because this â€¦","The density of the substance in kg/m3","Gets the content of <code>density</code> field or a default value given â€¦","","","Returns the argument unchanged.","Gets the <code>front_solar_absorbtance</code> field. Returns a <code>Result</code> â€¦","Solar absorbtance (from 0 to 1) at the front side (Front â€¦","Gets the content of <code>front_solar_absorbtance</code> field or a â€¦","Gets the <code>front_thermal_absorbtance</code> field. Returns a <code>Result</code> â€¦","Front thermal absorbtance (i.e., emissitivy; from 0 to 1) â€¦","Gets the content of <code>front_thermal_absorbtance</code> field or a â€¦","Gets the <code>front_visible_reflectance</code> field. Returns a <code>Result</code> â€¦","Solar absorbtance (from 0 to 1) at the front side (Front â€¦","Gets the content of <code>front_visible_reflectance</code> field or a â€¦","Calls <code>U::from(self)</code>.","Borrows the name","The name of the Substance. Should be unique for each â€¦","Creates a new <code>Normal</code>","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Prints the docs for this object","","Sets the <code>back_solar_absorbtance</code> field.","Sets the <code>back_thermal_absorbtance</code> field.","Sets the <code>back_visible_reflectance</code> field.","Sets the <code>density</code> field.","Sets the <code>front_solar_absorbtance</code> field.","Sets the <code>front_thermal_absorbtance</code> field.","Sets the <code>front_visible_reflectance</code> field.","Sets the <code>solar_transmittance</code> field.","Sets the <code>specific_heat_capacity</code> field.","Sets the <code>thermal_conductivity</code> field.","Sets the <code>visible_transmissivity</code> field.","Gets the <code>solar_transmittance</code> field. Returns a <code>Result</code> â€¦","The front solar transmittance at normal incidence (from 0 â€¦","Gets the content of <code>solar_transmittance</code> field or a default â€¦","Gets the <code>specific_heat_capacity</code> field. Returns a <code>Result</code> â€¦","The specific heat capacity of the substance in J/kg.K","Gets the content of <code>specific_heat_capacity</code> field or a â€¦","Gets the <code>thermal_conductivity</code> field. Returns a <code>Result</code> â€¦","The thermal conductivity of the substance in W/m.K    ","Gets the content of <code>thermal_conductivity</code> field or a â€¦","Calculates the thermal diffusivity of the Normal","","","","","Gets the <code>visible_transmissivity</code> field. Returns a <code>Result</code> â€¦","The front solar transmittance at normal incidence (from 0 â€¦","Gets the content of <code>visible_transmissivity</code> field or a â€¦","Wraps a <code>Normal</code> in a <code>Substance</code> enum","A floor/ceiling that connect two spaces, but whose area is â€¦","Other categories that might be useful (again, these labels â€¦","A floor that leads to the exterior (e.g., a floor â€¦","A Wall that connects a space with the exterior.","A useful horizontal surface that touches the ground","Floor/ceiling that connects two spaces, and whose area is â€¦","A Wall connecting two spaces","A surfaces at the top of a building","A fixed (i.e., not movable) surface in the building (or â€¦","The kind of surface, useful for pre- and post-processing.","Returns the area of the <code>Surface</code> (calculated based on the â€¦","Gets the <code>back_boundary</code> field. Returns a <code>Result</code> because â€¦","The Boundary in back of the Surface","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","","","","","Gets the <code>category</code> field. Returns a <code>Result</code> because this â€¦","The Surface Type. ","","","","","The name of the construction in the Modelâ€™s â€¦","","","","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","","","Returns the argument unchanged.","Returns the argument unchanged.","Gets the <code>front_boundary</code> field. Returns a <code>Result</code> because â€¦","The Boundary in front of the Surface","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Gets the value of the [<code>SimulationStateElement</code>] â€¦","","Gets the index of the [<code>SimulationStateElement</code>] â€¦","Borrows the name","The name of the surface","","Creates a new <code>Surface</code>","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Retrieves the type of object as a <code>&amp;&#39;static str</code>.","Prints the Rhai API for the <code>Surface</code>","Prints the docs for this object","Prints the docs for this object","Registers the Rhai API for the <code>Surface</code>","","","Sets the <code>back_boundary</code> field.","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Sets the <code>category</code> field.","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Sets the <code>front_boundary</code> field.","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","Changes the value of the [<code>SimulationStateElement</code>] â€¦","Sets the index of the [<code>SimulationStateElement</code>] â€¦","","","","","","","","","An array of Numbers representing the vertices of the â€¦","The name of the custom type"],"i":[1,20,29,0,0,51,47,40,45,29,0,20,47,51,29,29,19,29,51,51,0,40,45,40,45,40,45,40,45,40,45,40,45,40,45,40,45,40,45,40,45,0,0,20,0,1,51,0,40,45,0,51,51,9,9,0,40,45,0,9,47,0,51,0,0,0,0,0,0,9,0,0,1,40,45,40,45,40,45,40,45,40,45,40,45,0,47,0,40,45,40,45,40,45,40,45,40,45,40,45,40,45,40,45,40,45,0,0,9,47,19,46,16,35,16,35,16,35,16,35,16,35,0,33,0,33,32,16,35,0,16,35,32,41,33,41,0,0,32,16,35,16,35,16,35,16,35,16,35,16,35,0,32,0,33,33,33,16,35,46,46,33,0,32,0,32,15,30,0,41,41,10,32,10,15,31,16,35,30,33,16,16,32,16,41,41,30,0,0,0,0,10,0,0,32,0,0,32,32,0,32,10,46,0,31,32,0,32,30,46,31,33,33,16,35,33,10,52,53,54,55,56,56,54,57,58,57,57,57,59,60,61,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,114,115,116,117,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,52,53,0,9,9,9,0,9,9,9,10,9,10,9,10,9,10,10,9,10,9,10,9,10,9,10,10,10,10,10,10,10,9,10,9,10,9,10,10,10,10,10,10,10,10,10,10,9,10,9,10,9,10,9,10,10,10,10,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,20,20,19,0,0,0,20,19,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,20,19,16,20,19,16,16,16,20,19,16,20,19,16,16,16,20,19,16,19,16,16,16,20,19,16,20,19,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,20,19,16,16,16,16,16,16,16,16,20,19,16,16,16,16,16,16,16,16,16,20,19,16,16,20,19,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,20,19,16,20,19,16,20,19,16,20,19,16,16,54,55,56,56,54,0,26,0,0,26,26,26,26,26,28,26,0,26,26,27,28,27,28,0,26,28,27,28,26,27,28,26,26,26,27,28,28,26,26,26,26,118,119,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,57,58,57,57,57,59,60,61,57,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,32,32,32,32,32,32,32,32,32,36,32,36,32,32,32,32,32,32,32,36,32,36,32,36,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,36,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,36,32,36,32,36,32,36,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,40,45,40,45,40,45,40,45,40,45,40,45,40,45,40,45,40,45,40,45,40,45,40,45,40,45,0,0,40,45,40,45,40,45,40,45,40,45,40,45,0,40,45,40,45,40,45,40,45,40,45,40,45,40,45,40,45,40,45,40,45,40,45,40,45,40,45,45,40,45,40,45,40,45,40,45,40,40,40,40,45,45,45,45,40,40,45,40,45,40,45,40,45,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,114,115,116,47,47,47,0,47,0,47,46,46,46,47,46,47,46,47,46,47,46,47,46,47,46,47,47,46,47,46,47,46,46,46,46,46,46,46,46,47,46,47,46,47,46,46,46,46,46,46,46,46,46,46,46,47,46,47,46,47,46,47,46,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,34,0,34,0,34,34,34,34,34,34,34,0,34,34,0,34,34,34,34,34,34,34,120,121,48,48,0,0,48,48,48,49,48,49,48,49,48,49,48,49,48,49,48,49,49,49,48,49,49,49,49,48,49,48,49,48,49,49,48,49,48,49,48,49,48,49,49,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,51,35,51,35,35,35,51,35,51,35,35,51,35,51,35,35,35,51,35,51,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,51,35,35,35,35,35,35,51,35,51,35,35,51,35,35,51,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,51,35,51,35,51,35,51,35,35,117],"fp":[[4,"Boundary"],[4,"Result"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"String"],[6,"Result"],[3,"TypeId"],[4,"ShelterClass"],[3,"Building"],[15,"usize"],[8,"Display"],[8,"Into"],[15,"f64"],[3,"Construction"],[3,"Fenestration"],[6,"SimulationState"],[4,"Option"],[4,"FenestrationType"],[4,"FenestrationPosition"],[3,"Loop3D"],[15,"bool"],[3,"Polygon3D"],[3,"Engine"],[3,"Rc"],[4,"HVAC"],[3,"ElectricHeater"],[3,"IdealHeaterCooler"],[4,"Infiltration"],[3,"Luminaire"],[3,"Material"],[3,"Model"],[3,"Space"],[4,"Substance"],[3,"Surface"],[3,"SimpleModelVisitor"],[3,"Error"],[3,"Path"],[8,"AsRef"],[4,"SimulationStateElement"],[3,"SimulationStateHeader"],[3,"SimpleScanner"],[15,"char"],[3,"SolarOptions"],[4,"Output"],[3,"SiteDetails"],[4,"TerrainClass"],[4,"GasSpecification"],[3,"Gas"],[3,"Normal"],[4,"SurfaceType"],[13,"Space"],[13,"AmbientTemperature"],[13,"Binary"],[13,"Fixed"],[13,"Continuous"],[13,"DesignFlowRate"],[13,"EffectiveAirLeakageArea"],[13,"Constant"],[13,"Blast"],[13,"Doe2"],[13,"Clothing"],[13,"FenestrationOpenFraction"],[13,"HeatingCoolingPowerConsumption"],[13,"LuminairePowerConsumption"],[13,"SurfaceFrontConvectionCoefficient"],[13,"SurfaceBackConvectionCoefficient"],[13,"SurfaceFrontConvectiveHeatFlow"],[13,"SurfaceBackConvectiveHeatFlow"],[13,"SurfaceFrontSolarIrradiance"],[13,"SurfaceBackSolarIrradiance"],[13,"SurfaceFrontIRIrradiance"],[13,"SurfaceBackIRIrradiance"],[13,"FenestrationFrontConvectionCoefficient"],[13,"FenestrationBackConvectionCoefficient"],[13,"FenestrationFrontConvectiveHeatFlow"],[13,"FenestrationBackConvectiveHeatFlow"],[13,"FenestrationFrontSolarIrradiance"],[13,"FenestrationBackSolarIrradiance"],[13,"FenestrationFrontIRIrradiance"],[13,"FenestrationBackIRIrradiance"],[13,"SpaceDryBulbTemperature"],[13,"SpaceInfiltrationVolume"],[13,"SpaceInfiltrationTemperature"],[13,"SpaceVentilationVolume"],[13,"SpaceVentilationTemperature"],[13,"SpaceAirExchangeVolume"],[13,"SurfaceNodeTemperature"],[13,"FenestrationNodeTemperature"],[13,"FenestrationOpenFraction"],[13,"HeatingCoolingPowerConsumption"],[13,"LuminairePowerConsumption"],[13,"SurfaceFrontConvectionCoefficient"],[13,"SurfaceBackConvectionCoefficient"],[13,"SurfaceFrontConvectiveHeatFlow"],[13,"SurfaceBackConvectiveHeatFlow"],[13,"SurfaceFrontSolarIrradiance"],[13,"SurfaceBackSolarIrradiance"],[13,"SurfaceFrontIRIrradiance"],[13,"SurfaceBackIRIrradiance"],[13,"FenestrationFrontConvectionCoefficient"],[13,"FenestrationBackConvectionCoefficient"],[13,"FenestrationFrontConvectiveHeatFlow"],[13,"FenestrationBackConvectiveHeatFlow"],[13,"FenestrationFrontSolarIrradiance"],[13,"FenestrationBackSolarIrradiance"],[13,"FenestrationFrontIRIrradiance"],[13,"FenestrationBackIRIrradiance"],[13,"SpaceDryBulbTemperature"],[13,"SpaceInfiltrationVolume"],[13,"SpaceInfiltrationTemperature"],[13,"SpaceVentilationVolume"],[13,"SpaceVentilationTemperature"],[13,"SpaceAirExchangeVolume"],[13,"SurfaceNodeTemperature"],[13,"FenestrationNodeTemperature"],[13,"Custom"],[13,"IdealHeaterCooler"],[13,"ElectricHeater"],[13,"Normal"],[13,"Gas"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
